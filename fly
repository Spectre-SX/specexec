-- Configs
local flybutton = "e"
local flyspeed = 100
local controls = {
	front = "w",
	back = "s",
	right = "d",
	left = "a",
	up = " ",
	down = "q"
}
-- Configs

local player = game:GetService("Players").LocalPlayer
local userInputService = game:GetService("UserInputService")
local runservice = game:GetService("RunService")

local flycontrol = {F = 0, R = 0, B = 0, L = 0, U = 0, D = 0}
local flying = false

local function fly()
	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:WaitForChild("HumanoidRootPart")
	local humanoid = character:FindFirstChildWhichIsA("Humanoid")
	if not humanoid then return end
	
	flying = true
	
	local bv = Instance.new("BodyVelocity")
	local bg = Instance.new("BodyGyro")
	bv.MaxForce = Vector3.new(9e4, 9e4, 9e4)
	bg.CFrame = hrp.CFrame
	bg.MaxTorque = Vector3.new(9e4, 9e4, 9e4)
	bg.P = 9e4
	bv.Parent = hrp
	bg.Parent = hrp
	
	-- Disable Collisions
	for _, child in pairs(character:GetDescendants()) do
		if child:IsA("BasePart") then
			coroutine.wrap(function()
				local con = nil
				con = runservice.Stepped:Connect(function()
					if not flying then
						con:Disconnect()
						child.CanCollide = true
					end
					child.CanCollide = false
				end)
			end)()
		end
	end
	
	local con = nil
	con = runservice.Heartbeat:Connect(function()
		if not flying then
			con:Disconnect()
			bv:Destroy()
			bg:Destroy()
		end
		
		humanoid.PlatformStand = true
		local camera = workspace.CurrentCamera.CFrame
		bv.Velocity = (camera.LookVector * ((flycontrol.F - flycontrol.B) * flyspeed)) + 
                      (camera.RightVector * ((flycontrol.R - flycontrol.L) * flyspeed)) + 
                      (camera.UpVector * ((flycontrol.U - flycontrol.D) * flyspeed))
		bg.CFrame = camera
	end)
	
	while flying do
		runservice.Heartbeat:Wait()
	end
	
	humanoid.PlatformStand = false
end

-- Input Handling
userInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end

	local key = input.KeyCode.Name:lower()

	if key == flybutton then
		if flying then
			flying = false
		else
			fly()
		end
	elseif key == controls.front then
		flycontrol.F = 1
	elseif key == controls.back then
		flycontrol.B = 1
	elseif key == controls.right then
		flycontrol.R = 1
	elseif key == controls.left then
		flycontrol.L = 1
	elseif key == controls.up then
		flycontrol.U = 1
	elseif key == controls.down then
		flycontrol.D = 1
	end
end)

userInputService.InputEnded:Connect(function(input)
	local key = input.KeyCode.Name:lower()

	if key == controls.front then
		flycontrol.F = 0
	elseif key == controls.back then
		flycontrol.B = 0
	elseif key == controls.right then
		flycontrol.R = 0
	elseif key == controls.left then
		flycontrol.L = 0
	elseif key == controls.up then
		flycontrol.U = 0
	elseif key == controls.down then
		flycontrol.D = 0
	end
end)

player.CharacterAdded:Connect(function()
	flying = false
end)
